---

- name: Zookeeper - create group
  group: name=zookeeper state=present

- name: Zookeeper - create user
  user: name=zookeeper state=present
  
- name: Zookeeper - create package location
  file: path=/home/ubuntu/packages state=directory owner=ubuntu group=ubuntu

- name: Zookeeper - download 3.4.10 package
  get_url:
    url: "http://apache.cs.uu.nl/zookeeper/zookeeper-3.4.10/zookeeper-3.4.10.tar.gz"
    dest: /home/ubuntu/packages
    mode: 0444

- name: Zookeeper - create root directory
  file: path=/opt/zk state=directory owner=zookeeper group=zookeeper

- name: Zookeeper - install package
  unarchive:
    src: /home/ubuntu/packages/zookeeper-3.4.10.tar.gz
    dest: /opt/zk
    remote_src: true
    owner: zookeeper
    group: zookeeper

# configure server1

- name: Zookeeper server1 - set server_id
  set_fact: server_id="1" zk_client_port="2191"

- name: "Zookeeper server{{ server_id }} - create root directory"
  file: path="/opt/zk/server{{ server_id }}" state=directory owner=zookeeper group=zookeeper

- name: "Zookeeper server{{ server_id }} - create conf dir"
  file: path="/opt/zk/server{{ server_id }}/conf" state=directory owner=zookeeper group=zookeeper

- name: "Zookeeper server{{ server_id }} - copy config"
  template: src=zoo.cfg.j2 dest="/opt/zk/server{{ server_id }}/conf/zoo.cfg" force=yes backup=yes owner=zookeeper group=zookeeper mode=0640

- name: "Zookeeper server{{ server_id }} - copy log4j"
  template: src=log4j.properties.j2 dest="/opt/zk/server{{ server_id }}/conf/log4j.properties" force=yes backup=yes owner=zookeeper group=zookeeper mode=0640

- name: "Zookeeper server{{ server_id }} - create data dir"
  file: path="/opt/zk/server{{ server_id }}/data" state=directory owner=zookeeper group=zookeeper

- name: "Zookeeper server{{ server_id }} - copy myid"
  template: src=myid.j2 dest="/opt/zk/server{{ server_id }}/data/myid" owner=zookeeper group=zookeeper

- name: "Zookeeper server{{ server_id }} - copy systemd script"
  template: src=zk-server.service.j2 dest="/lib/systemd/system/zk-server{{ server_id }}.service" force=yes owner=root group=root

- name: "Zookeeper server{{ server_id }} - start service"
  systemd: name="zk-server{{ server_id }}.service" state=restarted daemon_reload=yes enabled=yes

# configure server 2

- name: Zookeeper server1 - set server_id
  set_fact: server_id="2" zk_client_port="2192"

- name: "Zookeeper server{{ server_id }} - create root directory"
  file: path="/opt/zk/server{{ server_id }}" state=directory owner=zookeeper group=zookeeper

- name: "Zookeeper server{{ server_id }} - create conf dir"
  file: path="/opt/zk/server{{ server_id }}/conf" state=directory owner=zookeeper group=zookeeper

- name: "Zookeeper server{{ server_id }} - copy config"
  template: src=zoo.cfg.j2 dest="/opt/zk/server{{ server_id }}/conf/zoo.cfg" force=yes backup=yes owner=zookeeper group=zookeeper mode=0640

- name: "Zookeeper server{{ server_id }} - copy log4j"
  template: src=log4j.properties.j2 dest="/opt/zk/server{{ server_id }}/conf/log4j.properties" force=yes backup=yes owner=zookeeper group=zookeeper mode=0640

- name: "Zookeeper server{{ server_id }} - create data dir"
  file: path="/opt/zk/server{{ server_id }}/data" state=directory owner=zookeeper group=zookeeper

- name: "Zookeeper server{{ server_id }} - copy myid"
  template: src=myid.j2 dest="/opt/zk/server{{ server_id }}/data/myid" owner=zookeeper group=zookeeper

- name: "Zookeeper server{{ server_id }} - copy systemd script"
  template: src=zk-server.service.j2 dest="/lib/systemd/system/zk-server{{ server_id }}.service" force=yes owner=root group=root

- name: "Zookeeper server{{ server_id }} - start service"
  systemd: name="zk-server{{ server_id }}.service" state=restarted daemon_reload=yes enabled=yes
  
